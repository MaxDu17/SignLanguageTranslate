node {
  name: "Placeholders/Input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholders/Label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 10
        }
      }
    }
  }
}
node {
  name: "Placeholders/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Layer_1/Weights/Layer_1_Weight/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight/mul"
  op: "Mul"
  input: "Layer_1/Weights/Layer_1_Weight/TruncatedNormal"
  input: "Layer_1/Weights/Layer_1_Weight/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight"
  op: "Add"
  input: "Layer_1/Weights/Layer_1_Weight/mul"
  input: "Layer_1/Weights/Layer_1_Weight/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Weights/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Assign"
  op: "Assign"
  input: "Layer_1/Weights/Variable"
  input: "Layer_1/Weights/Layer_1_Weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/read"
  op: "Identity"
  input: "Layer_1/Weights/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_1/Weights/Layer_1_Weight_1"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Layer_1_Weight_1"
  op: "HistogramSummary"
  input: "Layer_1/Weights/Layer_1_Weight_1/tag"
  input: "Layer_1/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Biases/Layer_1_Bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Assign"
  op: "Assign"
  input: "Layer_1/Biases/Variable"
  input: "Layer_1/Biases/Layer_1_Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/read"
  op: "Identity"
  input: "Layer_1/Biases/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Layer_1_Bias_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_1/Biases/Layer_1_Bias_1"
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Layer_1_Bias_1"
  op: "HistogramSummary"
  input: "Layer_1/Biases/Layer_1_Bias_1/tag"
  input: "Layer_1/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Conv/Layer_1_Conv"
  op: "Conv2D"
  input: "Placeholders/Input"
  input: "Layer_1/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/add"
  op: "Add"
  input: "Layer_1/Conv/Layer_1_Conv"
  input: "Layer_1/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Relu"
  op: "Relu"
  input: "Layer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_1/Pool/Layer_1_Pool"
  op: "MaxPool"
  input: "Layer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Layer_2/Weights/Layer_2_Weight/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight/mul"
  op: "Mul"
  input: "Layer_2/Weights/Layer_2_Weight/TruncatedNormal"
  input: "Layer_2/Weights/Layer_2_Weight/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight"
  op: "Add"
  input: "Layer_2/Weights/Layer_2_Weight/mul"
  input: "Layer_2/Weights/Layer_2_Weight/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Weights/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Assign"
  op: "Assign"
  input: "Layer_2/Weights/Variable"
  input: "Layer_2/Weights/Layer_2_Weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/read"
  op: "Identity"
  input: "Layer_2/Weights/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_2/Weights/Layer_2_Weight_1"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Layer_2_Weight_1"
  op: "HistogramSummary"
  input: "Layer_2/Weights/Layer_2_Weight_1/tag"
  input: "Layer_2/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Biases/Layer_2_Bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Assign"
  op: "Assign"
  input: "Layer_2/Biases/Variable"
  input: "Layer_2/Biases/Layer_2_Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/read"
  op: "Identity"
  input: "Layer_2/Biases/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Layer_2_Bias_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_2/Biases/Layer_2_Bias_1"
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Layer_2_Bias_1"
  op: "HistogramSummary"
  input: "Layer_2/Biases/Layer_2_Bias_1/tag"
  input: "Layer_2/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Conv/Layer_2_Conv"
  op: "Conv2D"
  input: "Layer_1/Pool/Layer_1_Pool"
  input: "Layer_2/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/add"
  op: "Add"
  input: "Layer_2/Conv/Layer_2_Conv"
  input: "Layer_2/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Relu"
  op: "Relu"
  input: "Layer_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_2/Pool/Layer_2_Pool"
  op: "MaxPool"
  input: "Layer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Layer_3/Weights/Layer_3_Weight/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight/mul"
  op: "Mul"
  input: "Layer_3/Weights/Layer_3_Weight/TruncatedNormal"
  input: "Layer_3/Weights/Layer_3_Weight/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight"
  op: "Add"
  input: "Layer_3/Weights/Layer_3_Weight/mul"
  input: "Layer_3/Weights/Layer_3_Weight/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Weights/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Assign"
  op: "Assign"
  input: "Layer_3/Weights/Variable"
  input: "Layer_3/Weights/Layer_3_Weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/read"
  op: "Identity"
  input: "Layer_3/Weights/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_3/Weights/Layer_3_Weight_1"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Layer_3_Weight_1"
  op: "HistogramSummary"
  input: "Layer_3/Weights/Layer_3_Weight_1/tag"
  input: "Layer_3/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Biases/Layer_3_Bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Assign"
  op: "Assign"
  input: "Layer_3/Biases/Variable"
  input: "Layer_3/Biases/Layer_3_Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/read"
  op: "Identity"
  input: "Layer_3/Biases/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Layer_3_Bias_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Layer_3/Biases/Layer_3_Bias_1"
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Layer_3_Bias_1"
  op: "HistogramSummary"
  input: "Layer_3/Biases/Layer_3_Bias_1/tag"
  input: "Layer_3/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Conv/Layer_3_Conv"
  op: "Conv2D"
  input: "Layer_2/Pool/Layer_2_Pool"
  input: "Layer_3/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/add"
  op: "Add"
  input: "Layer_3/Conv/Layer_3_Conv"
  input: "Layer_3/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Relu"
  op: "Relu"
  input: "Layer_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Layer_3/Pool/Layer_3_Pool"
  op: "MaxPool"
  input: "Layer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Fully_Connected/Flatten/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\010\000\000"
      }
    }
  }
}
node {
  name: "Fully_Connected/Flatten"
  op: "Reshape"
  input: "Layer_3/Pool/Layer_3_Pool"
  input: "Fully_Connected/Flatten/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/mul"
  op: "Mul"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/TruncatedNormal"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight"
  op: "Add"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/mul"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Assign"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/read"
  op: "Identity"
  input: "Fully_Connected/Weights/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight_1"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight_1"
  op: "HistogramSummary"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight_1/tag"
  input: "Fully_Connected/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Assign"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable"
  input: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/read"
  op: "Identity"
  input: "Fully_Connected/Biases/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias_1"
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias_1"
  op: "HistogramSummary"
  input: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias_1/tag"
  input: "Fully_Connected/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/MatMul"
  op: "MatMul"
  input: "Fully_Connected/Flatten"
  input: "Fully_Connected/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Fully_Connected/add"
  op: "Add"
  input: "Fully_Connected/MatMul"
  input: "Fully_Connected/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Fully_Connected/sub"
  op: "Sub"
  input: "Fully_Connected/sub/x"
  input: "Placeholders/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/Shape"
  op: "Shape"
  input: "Fully_Connected/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Fully_Connected/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform/sub"
  op: "Sub"
  input: "Fully_Connected/dropout/random_uniform/max"
  input: "Fully_Connected/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform/mul"
  op: "Mul"
  input: "Fully_Connected/dropout/random_uniform/RandomUniform"
  input: "Fully_Connected/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/random_uniform"
  op: "Add"
  input: "Fully_Connected/dropout/random_uniform/mul"
  input: "Fully_Connected/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Fully_Connected/dropout/sub"
  op: "Sub"
  input: "Fully_Connected/dropout/sub/x"
  input: "Fully_Connected/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Fully_Connected/dropout/truediv"
  op: "RealDiv"
  input: "Fully_Connected/dropout/truediv/x"
  input: "Fully_Connected/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "Fully_Connected/dropout/random_uniform"
  input: "Fully_Connected/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/mul"
  op: "Mul"
  input: "Fully_Connected/add"
  input: "Fully_Connected/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Fully_Connected/dropout/Cast"
  op: "Cast"
  input: "Fully_Connected/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Fully_Connected/dropout/mul_1"
  op: "Mul"
  input: "Fully_Connected/dropout/mul"
  input: "Fully_Connected/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Output/Weights/raw_pred_Weight/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight/mul"
  op: "Mul"
  input: "Output/Weights/raw_pred_Weight/TruncatedNormal"
  input: "Output/Weights/raw_pred_Weight/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight"
  op: "Add"
  input: "Output/Weights/raw_pred_Weight/mul"
  input: "Output/Weights/raw_pred_Weight/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/Weights/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Weights/Variable/Assign"
  op: "Assign"
  input: "Output/Weights/Variable"
  input: "Output/Weights/raw_pred_Weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Weights/Variable/read"
  op: "Identity"
  input: "Output/Weights/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Output/Weights/raw_pred_Weight_1"
      }
    }
  }
}
node {
  name: "Output/Weights/raw_pred_Weight_1"
  op: "HistogramSummary"
  input: "Output/Weights/raw_pred_Weight_1/tag"
  input: "Output/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/Biases/raw_pred_Bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Output/Biases/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Biases/Variable/Assign"
  op: "Assign"
  input: "Output/Biases/Variable"
  input: "Output/Biases/raw_pred_Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Biases/Variable/read"
  op: "Identity"
  input: "Output/Biases/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
}
node {
  name: "Output/Biases/raw_pred_Bias_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Output/Biases/raw_pred_Bias_1"
      }
    }
  }
}
node {
  name: "Output/Biases/raw_pred_Bias_1"
  op: "HistogramSummary"
  input: "Output/Biases/raw_pred_Bias_1/tag"
  input: "Output/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/MatMul"
  op: "MatMul"
  input: "Fully_Connected/dropout/mul_1"
  input: "Output/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Output/add"
  op: "Add"
  input: "Output/MatMul"
  input: "Output/Biases/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Output/Prediction/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Output/Prediction"
  op: "Mul"
  input: "Output/Prediction/x"
  input: "Output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Shape"
  op: "Shape"
  input: "Output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Shape_1"
  op: "Shape"
  input: "Output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub"
  op: "Sub"
  input: "Loss_and_Optimizer/Softmax_loss/Rank_1"
  input: "Loss_and_Optimizer/Softmax_loss/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice/begin"
  op: "Pack"
  input: "Loss_and_Optimizer/Softmax_loss/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice"
  op: "Slice"
  input: "Loss_and_Optimizer/Softmax_loss/Shape_1"
  input: "Loss_and_Optimizer/Softmax_loss/Slice/begin"
  input: "Loss_and_Optimizer/Softmax_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat"
  op: "ConcatV2"
  input: "Loss_and_Optimizer/Softmax_loss/concat/values_0"
  input: "Loss_and_Optimizer/Softmax_loss/Slice"
  input: "Loss_and_Optimizer/Softmax_loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Reshape"
  op: "Reshape"
  input: "Output/add"
  input: "Loss_and_Optimizer/Softmax_loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Shape_2"
  op: "Shape"
  input: "Placeholders/Label"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub_1"
  op: "Sub"
  input: "Loss_and_Optimizer/Softmax_loss/Rank_2"
  input: "Loss_and_Optimizer/Softmax_loss/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_1/begin"
  op: "Pack"
  input: "Loss_and_Optimizer/Softmax_loss/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_1"
  op: "Slice"
  input: "Loss_and_Optimizer/Softmax_loss/Shape_2"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_1/begin"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/concat_1"
  op: "ConcatV2"
  input: "Loss_and_Optimizer/Softmax_loss/concat_1/values_0"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_1"
  input: "Loss_and_Optimizer/Softmax_loss/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Reshape_1"
  op: "Reshape"
  input: "Placeholders/Label"
  input: "Loss_and_Optimizer/Softmax_loss/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Sub_2"
  op: "Sub"
  input: "Loss_and_Optimizer/Softmax_loss/Rank"
  input: "Loss_and_Optimizer/Softmax_loss/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_2/size"
  op: "Pack"
  input: "Loss_and_Optimizer/Softmax_loss/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Slice_2"
  op: "Slice"
  input: "Loss_and_Optimizer/Softmax_loss/Shape"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_2/begin"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Softmax_loss/Reshape_2"
  op: "Reshape"
  input: "Loss_and_Optimizer/Softmax_loss"
  input: "Loss_and_Optimizer/Softmax_loss/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Mean"
  op: "Mean"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape_2"
  input: "Loss_and_Optimizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fill"
  op: "Fill"
  input: "Loss_and_Optimizer/gradients/Shape"
  input: "Loss_and_Optimizer/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fill"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape"
  op: "Shape"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Tile"
  op: "Tile"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Reshape"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape_1"
  op: "Shape"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Prod"
  op: "Prod"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape_1"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Prod_1"
  op: "Prod"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Shape_2"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Maximum"
  op: "Maximum"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Prod_1"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Prod"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Cast"
  op: "Cast"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/truediv"
  op: "RealDiv"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Tile"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_2_grad/Shape"
  op: "Shape"
  input: "Loss_and_Optimizer/Softmax_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Mean_grad/truediv"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/zeros_like"
  op: "ZerosLike"
  input: "Loss_and_Optimizer/Softmax_loss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims"
  op: "ExpandDims"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_2_grad/Reshape"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul"
  op: "Mul"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims"
  input: "Loss_and_Optimizer/Softmax_loss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "Loss_and_Optimizer/Softmax_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/Neg"
  op: "Neg"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_2_grad/Reshape"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul_1"
  op: "Mul"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/ExpandDims_1"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul"
  input: "^Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul"
  input: "^Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul_1"
  input: "^Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/mul_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_grad/Shape"
  op: "Shape"
  input: "Output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss_grad/tuple/control_dependency"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Shape"
  op: "Shape"
  input: "Output/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_grad/Reshape"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Loss_and_Optimizer/Softmax_loss/Reshape_grad/Reshape"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Output/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Output/add_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Output/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Output/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/control_dependency"
  input: "Output/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Fully_Connected/dropout/mul_1"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul"
  input: "^Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul"
  input: "^Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul_1"
  input: "^Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Output/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "Fully_Connected/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "Fully_Connected/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/control_dependency"
  input: "Fully_Connected/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Mul"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "Fully_Connected/dropout/mul"
  input: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Mul_1"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape"
  op: "Shape"
  input: "Fully_Connected/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "Fully_Connected/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Mul"
  op: "Mul"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/control_dependency"
  input: "Fully_Connected/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Mul"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "Fully_Connected/add"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Mul_1"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape"
  op: "Shape"
  input: "Fully_Connected/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/control_dependency"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/dropout/mul_grad/tuple/control_dependency"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/control_dependency"
  input: "Fully_Connected/Weights/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Fully_Connected/Flatten"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul_1"
  input: "^Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/Flatten_grad/Shape"
  op: "Shape"
  input: "Layer_3/Pool/Layer_3_Pool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Fully_Connected/Flatten_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/control_dependency"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/Flatten_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Pool/Layer_3_Pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Layer_3/Relu"
  input: "Layer_3/Pool/Layer_3_Pool"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/Flatten_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_3/Pool/Layer_3_Pool_grad/MaxPoolGrad"
  input: "Layer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape"
  op: "Shape"
  input: "Layer_3/Conv/Layer_3_Conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_3/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_3/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/ShapeN"
  op: "ShapeN"
  input: "Layer_2/Pool/Layer_2_Pool"
  input: "Layer_3/Weights/Variable/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/ShapeN"
  input: "Layer_3/Weights/Variable/read"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Layer_2/Pool/Layer_2_Pool"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/ShapeN:1"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropInput"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropInput"
  input: "^Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Pool/Layer_2_Pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Layer_2/Relu"
  input: "Layer_2/Pool/Layer_2_Pool"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_2/Pool/Layer_2_Pool_grad/MaxPoolGrad"
  input: "Layer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape"
  op: "Shape"
  input: "Layer_2/Conv/Layer_2_Conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_2/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_2/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/ShapeN"
  op: "ShapeN"
  input: "Layer_1/Pool/Layer_1_Pool"
  input: "Layer_2/Weights/Variable/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/ShapeN"
  input: "Layer_2/Weights/Variable/read"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Layer_1/Pool/Layer_1_Pool"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/ShapeN:1"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropInput"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropInput"
  input: "^Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Pool/Layer_1_Pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Layer_1/Relu"
  input: "Layer_1/Pool/Layer_1_Pool"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_1/Pool/Layer_1_Pool_grad/MaxPoolGrad"
  input: "Layer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape"
  op: "Shape"
  input: "Layer_1/Conv/Layer_1_Conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Sum"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_1/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Sum"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Sum_1"
  op: "Sum"
  input: "Loss_and_Optimizer/gradients/Layer_1/Relu_grad/ReluGrad"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Sum_1"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape_1"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape"
  input: "^Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape_1"
  input: "^Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/ShapeN"
  op: "ShapeN"
  input: "Placeholders/Input"
  input: "Layer_1/Weights/Variable/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/ShapeN"
  input: "Layer_1/Weights/Variable/read"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Placeholders/Input"
  input: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/ShapeN:1"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropInput"
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/control_dependency"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropInput"
  input: "^Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropFilter"
  input: "^Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta1_power/Assign"
  op: "Assign"
  input: "Loss_and_Optimizer/beta1_power"
  input: "Loss_and_Optimizer/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta1_power/read"
  op: "Identity"
  input: "Loss_and_Optimizer/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta2_power/Assign"
  op: "Assign"
  input: "Loss_and_Optimizer/beta2_power"
  input: "Loss_and_Optimizer/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/beta2_power/read"
  op: "Identity"
  input: "Loss_and_Optimizer/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_1/Weights/Variable/Optimizer"
  input: "Layer_1/Weights/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_1/Weights/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_1/Weights/Variable/Optimizer_1"
  input: "Layer_1/Weights/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Weights/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_1/Weights/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_1/Biases/Variable/Optimizer"
  input: "Layer_1/Biases/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_1/Biases/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_1/Biases/Variable/Optimizer_1"
  input: "Layer_1/Biases/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_1/Biases/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_1/Biases/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_2/Weights/Variable/Optimizer"
  input: "Layer_2/Weights/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_2/Weights/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_2/Weights/Variable/Optimizer_1"
  input: "Layer_2/Weights/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Weights/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_2/Weights/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_2/Biases/Variable/Optimizer"
  input: "Layer_2/Biases/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_2/Biases/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_2/Biases/Variable/Optimizer_1"
  input: "Layer_2/Biases/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_2/Biases/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_2/Biases/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_3/Weights/Variable/Optimizer"
  input: "Layer_3/Weights/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_3/Weights/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_3/Weights/Variable/Optimizer_1"
  input: "Layer_3/Weights/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Weights/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_3/Weights/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Layer_3/Biases/Variable/Optimizer"
  input: "Layer_3/Biases/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer/read"
  op: "Identity"
  input: "Layer_3/Biases/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Layer_3/Biases/Variable/Optimizer_1"
  input: "Layer_3/Biases/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Layer_3/Biases/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Layer_3/Biases/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable/Optimizer"
  input: "Fully_Connected/Weights/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer/read"
  op: "Identity"
  input: "Fully_Connected/Weights/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable/Optimizer_1"
  input: "Fully_Connected/Weights/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Weights/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Fully_Connected/Weights/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable/Optimizer"
  input: "Fully_Connected/Biases/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer/read"
  op: "Identity"
  input: "Fully_Connected/Biases/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable/Optimizer_1"
  input: "Fully_Connected/Biases/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Fully_Connected/Biases/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Fully_Connected/Biases/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer/Initializer/zeros"
  op: "Fill"
  input: "Output/Weights/Variable/Optimizer/Initializer/zeros/shape_as_tensor"
  input: "Output/Weights/Variable/Optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Output/Weights/Variable/Optimizer"
  input: "Output/Weights/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer/read"
  op: "Identity"
  input: "Output/Weights/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "Output/Weights/Variable/Optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "Output/Weights/Variable/Optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Output/Weights/Variable/Optimizer_1"
  input: "Output/Weights/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Weights/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Output/Weights/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer/Assign"
  op: "Assign"
  input: "Output/Biases/Variable/Optimizer"
  input: "Output/Biases/Variable/Optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer/read"
  op: "Identity"
  input: "Output/Biases/Variable/Optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer_1/Assign"
  op: "Assign"
  input: "Output/Biases/Variable/Optimizer_1"
  input: "Output/Biases/Variable/Optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Output/Biases/Variable/Optimizer_1/read"
  op: "Identity"
  input: "Output/Biases/Variable/Optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_1/Weights/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_1/Weights/Variable"
  input: "Layer_1/Weights/Variable/Optimizer"
  input: "Layer_1/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_1/Conv/Layer_1_Conv_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_1/Biases/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_1/Biases/Variable"
  input: "Layer_1/Biases/Variable/Optimizer"
  input: "Layer_1/Biases/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_2/Weights/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_2/Weights/Variable"
  input: "Layer_2/Weights/Variable/Optimizer"
  input: "Layer_2/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_2/Conv/Layer_2_Conv_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_2/Biases/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_2/Biases/Variable"
  input: "Layer_2/Biases/Variable/Optimizer"
  input: "Layer_2/Biases/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_3/Weights/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_3/Weights/Variable"
  input: "Layer_3/Weights/Variable/Optimizer"
  input: "Layer_3/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_3/Conv/Layer_3_Conv_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Layer_3/Biases/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Layer_3/Biases/Variable"
  input: "Layer_3/Biases/Variable/Optimizer"
  input: "Layer_3/Biases/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Layer_3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Fully_Connected/Weights/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Fully_Connected/Weights/Variable"
  input: "Fully_Connected/Weights/Variable/Optimizer"
  input: "Fully_Connected/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Fully_Connected/Biases/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Fully_Connected/Biases/Variable"
  input: "Fully_Connected/Biases/Variable/Optimizer"
  input: "Fully_Connected/Biases/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Fully_Connected/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Output/Weights/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Output/Weights/Variable"
  input: "Output/Weights/Variable/Optimizer"
  input: "Output/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Output/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/update_Output/Biases/Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Output/Biases/Variable"
  input: "Output/Biases/Variable/Optimizer"
  input: "Output/Biases/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/learning_rate"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "Loss_and_Optimizer/Optimizer/epsilon"
  input: "Loss_and_Optimizer/gradients/Output/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/mul"
  op: "Mul"
  input: "Loss_and_Optimizer/beta1_power/read"
  input: "Loss_and_Optimizer/Optimizer/beta1"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Weights/Variable/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/Assign"
  op: "Assign"
  input: "Loss_and_Optimizer/beta1_power"
  input: "Loss_and_Optimizer/Optimizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/mul_1"
  op: "Mul"
  input: "Loss_and_Optimizer/beta2_power/read"
  input: "Loss_and_Optimizer/Optimizer/beta2"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Weights/Variable/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer/Assign_1"
  op: "Assign"
  input: "Loss_and_Optimizer/beta2_power"
  input: "Loss_and_Optimizer/Optimizer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Loss_and_Optimizer/Optimizer"
  op: "NoOp"
  input: "^Loss_and_Optimizer/Optimizer/Assign"
  input: "^Loss_and_Optimizer/Optimizer/Assign_1"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Fully_Connected/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_1/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_2/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Layer_3/Weights/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Biases/Variable/ApplyAdam"
  input: "^Loss_and_Optimizer/Optimizer/update_Output/Weights/Variable/ApplyAdam"
}
node {
  name: "Saver/Loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Saver/Loss"
      }
    }
  }
}
node {
  name: "Saver/Loss"
  op: "ScalarSummary"
  input: "Saver/Loss/tags"
  input: "Loss_and_Optimizer/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Saver/Merge/MergeSummary"
  op: "MergeSummary"
  input: "Layer_1/Weights/Layer_1_Weight_1"
  input: "Layer_1/Biases/Layer_1_Bias_1"
  input: "Layer_2/Weights/Layer_2_Weight_1"
  input: "Layer_2/Biases/Layer_2_Bias_1"
  input: "Layer_3/Weights/Layer_3_Weight_1"
  input: "Layer_3/Biases/Layer_3_Bias_1"
  input: "Fully_Connected/Weights/Fully_Connected_Layer_1_Weight_1"
  input: "Fully_Connected/Biases/Fully_Connected_Layer_1_Bias_1"
  input: "Output/Weights/raw_pred_Weight_1"
  input: "Output/Biases/raw_pred_Bias_1"
  input: "Saver/Loss"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
}
node {
  name: "Saver/save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "Saver/save/filename"
  op: "PlaceholderWithDefault"
  input: "Saver/save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Saver/save/Const"
  op: "PlaceholderWithDefault"
  input: "Saver/save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Saver/save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 32
          }
        }
        string_val: "Fully_Connected/Biases/Variable"
        string_val: "Fully_Connected/Biases/Variable/Optimizer"
        string_val: "Fully_Connected/Biases/Variable/Optimizer_1"
        string_val: "Fully_Connected/Weights/Variable"
        string_val: "Fully_Connected/Weights/Variable/Optimizer"
        string_val: "Fully_Connected/Weights/Variable/Optimizer_1"
        string_val: "Layer_1/Biases/Variable"
        string_val: "Layer_1/Biases/Variable/Optimizer"
        string_val: "Layer_1/Biases/Variable/Optimizer_1"
        string_val: "Layer_1/Weights/Variable"
        string_val: "Layer_1/Weights/Variable/Optimizer"
        string_val: "Layer_1/Weights/Variable/Optimizer_1"
        string_val: "Layer_2/Biases/Variable"
        string_val: "Layer_2/Biases/Variable/Optimizer"
        string_val: "Layer_2/Biases/Variable/Optimizer_1"
        string_val: "Layer_2/Weights/Variable"
        string_val: "Layer_2/Weights/Variable/Optimizer"
        string_val: "Layer_2/Weights/Variable/Optimizer_1"
        string_val: "Layer_3/Biases/Variable"
        string_val: "Layer_3/Biases/Variable/Optimizer"
        string_val: "Layer_3/Biases/Variable/Optimizer_1"
        string_val: "Layer_3/Weights/Variable"
        string_val: "Layer_3/Weights/Variable/Optimizer"
        string_val: "Layer_3/Weights/Variable/Optimizer_1"
        string_val: "Loss_and_Optimizer/beta1_power"
        string_val: "Loss_and_Optimizer/beta2_power"
        string_val: "Output/Biases/Variable"
        string_val: "Output/Biases/Variable/Optimizer"
        string_val: "Output/Biases/Variable/Optimizer_1"
        string_val: "Output/Weights/Variable"
        string_val: "Output/Weights/Variable/Optimizer"
        string_val: "Output/Weights/Variable/Optimizer_1"
      }
    }
  }
}
node {
  name: "Saver/save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 32
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "Saver/save/SaveV2"
  op: "SaveV2"
  input: "Saver/save/Const"
  input: "Saver/save/SaveV2/tensor_names"
  input: "Saver/save/SaveV2/shape_and_slices"
  input: "Fully_Connected/Biases/Variable"
  input: "Fully_Connected/Biases/Variable/Optimizer"
  input: "Fully_Connected/Biases/Variable/Optimizer_1"
  input: "Fully_Connected/Weights/Variable"
  input: "Fully_Connected/Weights/Variable/Optimizer"
  input: "Fully_Connected/Weights/Variable/Optimizer_1"
  input: "Layer_1/Biases/Variable"
  input: "Layer_1/Biases/Variable/Optimizer"
  input: "Layer_1/Biases/Variable/Optimizer_1"
  input: "Layer_1/Weights/Variable"
  input: "Layer_1/Weights/Variable/Optimizer"
  input: "Layer_1/Weights/Variable/Optimizer_1"
  input: "Layer_2/Biases/Variable"
  input: "Layer_2/Biases/Variable/Optimizer"
  input: "Layer_2/Biases/Variable/Optimizer_1"
  input: "Layer_2/Weights/Variable"
  input: "Layer_2/Weights/Variable/Optimizer"
  input: "Layer_2/Weights/Variable/Optimizer_1"
  input: "Layer_3/Biases/Variable"
  input: "Layer_3/Biases/Variable/Optimizer"
  input: "Layer_3/Biases/Variable/Optimizer_1"
  input: "Layer_3/Weights/Variable"
  input: "Layer_3/Weights/Variable/Optimizer"
  input: "Layer_3/Weights/Variable/Optimizer_1"
  input: "Loss_and_Optimizer/beta1_power"
  input: "Loss_and_Optimizer/beta2_power"
  input: "Output/Biases/Variable"
  input: "Output/Biases/Variable/Optimizer"
  input: "Output/Biases/Variable/Optimizer_1"
  input: "Output/Weights/Variable"
  input: "Output/Weights/Variable/Optimizer"
  input: "Output/Weights/Variable/Optimizer_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Saver/save/control_dependency"
  op: "Identity"
  input: "Saver/save/Const"
  input: "^Saver/save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Saver/save/Const"
      }
    }
  }
}
node {
  name: "Saver/save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 32
          }
        }
        string_val: "Fully_Connected/Biases/Variable"
        string_val: "Fully_Connected/Biases/Variable/Optimizer"
        string_val: "Fully_Connected/Biases/Variable/Optimizer_1"
        string_val: "Fully_Connected/Weights/Variable"
        string_val: "Fully_Connected/Weights/Variable/Optimizer"
        string_val: "Fully_Connected/Weights/Variable/Optimizer_1"
        string_val: "Layer_1/Biases/Variable"
        string_val: "Layer_1/Biases/Variable/Optimizer"
        string_val: "Layer_1/Biases/Variable/Optimizer_1"
        string_val: "Layer_1/Weights/Variable"
        string_val: "Layer_1/Weights/Variable/Optimizer"
        string_val: "Layer_1/Weights/Variable/Optimizer_1"
        string_val: "Layer_2/Biases/Variable"
        string_val: "Layer_2/Biases/Variable/Optimizer"
        string_val: "Layer_2/Biases/Variable/Optimizer_1"
        string_val: "Layer_2/Weights/Variable"
        string_val: "Layer_2/Weights/Variable/Optimizer"
        string_val: "Layer_2/Weights/Variable/Optimizer_1"
        string_val: "Layer_3/Biases/Variable"
        string_val: "Layer_3/Biases/Variable/Optimizer"
        string_val: "Layer_3/Biases/Variable/Optimizer_1"
        string_val: "Layer_3/Weights/Variable"
        string_val: "Layer_3/Weights/Variable/Optimizer"
        string_val: "Layer_3/Weights/Variable/Optimizer_1"
        string_val: "Loss_and_Optimizer/beta1_power"
        string_val: "Loss_and_Optimizer/beta2_power"
        string_val: "Output/Biases/Variable"
        string_val: "Output/Biases/Variable/Optimizer"
        string_val: "Output/Biases/Variable/Optimizer_1"
        string_val: "Output/Weights/Variable"
        string_val: "Output/Weights/Variable/Optimizer"
        string_val: "Output/Weights/Variable/Optimizer_1"
      }
    }
  }
}
node {
  name: "Saver/save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 32
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "Saver/save/RestoreV2"
  op: "RestoreV2"
  input: "Saver/save/Const"
  input: "Saver/save/RestoreV2/tensor_names"
  input: "Saver/save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Saver/save/Assign"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable"
  input: "Saver/save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_1"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable/Optimizer"
  input: "Saver/save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_2"
  op: "Assign"
  input: "Fully_Connected/Biases/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_3"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable"
  input: "Saver/save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_4"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable/Optimizer"
  input: "Saver/save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_5"
  op: "Assign"
  input: "Fully_Connected/Weights/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_6"
  op: "Assign"
  input: "Layer_1/Biases/Variable"
  input: "Saver/save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_7"
  op: "Assign"
  input: "Layer_1/Biases/Variable/Optimizer"
  input: "Saver/save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_8"
  op: "Assign"
  input: "Layer_1/Biases/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_9"
  op: "Assign"
  input: "Layer_1/Weights/Variable"
  input: "Saver/save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_10"
  op: "Assign"
  input: "Layer_1/Weights/Variable/Optimizer"
  input: "Saver/save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_11"
  op: "Assign"
  input: "Layer_1/Weights/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_1/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_12"
  op: "Assign"
  input: "Layer_2/Biases/Variable"
  input: "Saver/save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_13"
  op: "Assign"
  input: "Layer_2/Biases/Variable/Optimizer"
  input: "Saver/save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_14"
  op: "Assign"
  input: "Layer_2/Biases/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_15"
  op: "Assign"
  input: "Layer_2/Weights/Variable"
  input: "Saver/save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_16"
  op: "Assign"
  input: "Layer_2/Weights/Variable/Optimizer"
  input: "Saver/save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_17"
  op: "Assign"
  input: "Layer_2/Weights/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_2/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_18"
  op: "Assign"
  input: "Layer_3/Biases/Variable"
  input: "Saver/save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_19"
  op: "Assign"
  input: "Layer_3/Biases/Variable/Optimizer"
  input: "Saver/save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_20"
  op: "Assign"
  input: "Layer_3/Biases/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_21"
  op: "Assign"
  input: "Layer_3/Weights/Variable"
  input: "Saver/save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_22"
  op: "Assign"
  input: "Layer_3/Weights/Variable/Optimizer"
  input: "Saver/save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_23"
  op: "Assign"
  input: "Layer_3/Weights/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Layer_3/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_24"
  op: "Assign"
  input: "Loss_and_Optimizer/beta1_power"
  input: "Saver/save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_25"
  op: "Assign"
  input: "Loss_and_Optimizer/beta2_power"
  input: "Saver/save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Fully_Connected/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_26"
  op: "Assign"
  input: "Output/Biases/Variable"
  input: "Saver/save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_27"
  op: "Assign"
  input: "Output/Biases/Variable/Optimizer"
  input: "Saver/save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_28"
  op: "Assign"
  input: "Output/Biases/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Biases/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_29"
  op: "Assign"
  input: "Output/Weights/Variable"
  input: "Saver/save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_30"
  op: "Assign"
  input: "Output/Weights/Variable/Optimizer"
  input: "Saver/save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/Assign_31"
  op: "Assign"
  input: "Output/Weights/Variable/Optimizer_1"
  input: "Saver/save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Output/Weights/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Saver/save/restore_all"
  op: "NoOp"
  input: "^Saver/save/Assign"
  input: "^Saver/save/Assign_1"
  input: "^Saver/save/Assign_10"
  input: "^Saver/save/Assign_11"
  input: "^Saver/save/Assign_12"
  input: "^Saver/save/Assign_13"
  input: "^Saver/save/Assign_14"
  input: "^Saver/save/Assign_15"
  input: "^Saver/save/Assign_16"
  input: "^Saver/save/Assign_17"
  input: "^Saver/save/Assign_18"
  input: "^Saver/save/Assign_19"
  input: "^Saver/save/Assign_2"
  input: "^Saver/save/Assign_20"
  input: "^Saver/save/Assign_21"
  input: "^Saver/save/Assign_22"
  input: "^Saver/save/Assign_23"
  input: "^Saver/save/Assign_24"
  input: "^Saver/save/Assign_25"
  input: "^Saver/save/Assign_26"
  input: "^Saver/save/Assign_27"
  input: "^Saver/save/Assign_28"
  input: "^Saver/save/Assign_29"
  input: "^Saver/save/Assign_3"
  input: "^Saver/save/Assign_30"
  input: "^Saver/save/Assign_31"
  input: "^Saver/save/Assign_4"
  input: "^Saver/save/Assign_5"
  input: "^Saver/save/Assign_6"
  input: "^Saver/save/Assign_7"
  input: "^Saver/save/Assign_8"
  input: "^Saver/save/Assign_9"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Fully_Connected/Biases/Variable/Assign"
  input: "^Fully_Connected/Biases/Variable/Optimizer/Assign"
  input: "^Fully_Connected/Biases/Variable/Optimizer_1/Assign"
  input: "^Fully_Connected/Weights/Variable/Assign"
  input: "^Fully_Connected/Weights/Variable/Optimizer/Assign"
  input: "^Fully_Connected/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_1/Biases/Variable/Assign"
  input: "^Layer_1/Biases/Variable/Optimizer/Assign"
  input: "^Layer_1/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_1/Weights/Variable/Assign"
  input: "^Layer_1/Weights/Variable/Optimizer/Assign"
  input: "^Layer_1/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_2/Biases/Variable/Assign"
  input: "^Layer_2/Biases/Variable/Optimizer/Assign"
  input: "^Layer_2/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_2/Weights/Variable/Assign"
  input: "^Layer_2/Weights/Variable/Optimizer/Assign"
  input: "^Layer_2/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_3/Biases/Variable/Assign"
  input: "^Layer_3/Biases/Variable/Optimizer/Assign"
  input: "^Layer_3/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_3/Weights/Variable/Assign"
  input: "^Layer_3/Weights/Variable/Optimizer/Assign"
  input: "^Layer_3/Weights/Variable/Optimizer_1/Assign"
  input: "^Loss_and_Optimizer/beta1_power/Assign"
  input: "^Loss_and_Optimizer/beta2_power/Assign"
  input: "^Output/Biases/Variable/Assign"
  input: "^Output/Biases/Variable/Optimizer/Assign"
  input: "^Output/Biases/Variable/Optimizer_1/Assign"
  input: "^Output/Weights/Variable/Assign"
  input: "^Output/Weights/Variable/Optimizer/Assign"
  input: "^Output/Weights/Variable/Optimizer_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^Fully_Connected/Biases/Variable/Assign"
  input: "^Fully_Connected/Biases/Variable/Optimizer/Assign"
  input: "^Fully_Connected/Biases/Variable/Optimizer_1/Assign"
  input: "^Fully_Connected/Weights/Variable/Assign"
  input: "^Fully_Connected/Weights/Variable/Optimizer/Assign"
  input: "^Fully_Connected/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_1/Biases/Variable/Assign"
  input: "^Layer_1/Biases/Variable/Optimizer/Assign"
  input: "^Layer_1/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_1/Weights/Variable/Assign"
  input: "^Layer_1/Weights/Variable/Optimizer/Assign"
  input: "^Layer_1/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_2/Biases/Variable/Assign"
  input: "^Layer_2/Biases/Variable/Optimizer/Assign"
  input: "^Layer_2/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_2/Weights/Variable/Assign"
  input: "^Layer_2/Weights/Variable/Optimizer/Assign"
  input: "^Layer_2/Weights/Variable/Optimizer_1/Assign"
  input: "^Layer_3/Biases/Variable/Assign"
  input: "^Layer_3/Biases/Variable/Optimizer/Assign"
  input: "^Layer_3/Biases/Variable/Optimizer_1/Assign"
  input: "^Layer_3/Weights/Variable/Assign"
  input: "^Layer_3/Weights/Variable/Optimizer/Assign"
  input: "^Layer_3/Weights/Variable/Optimizer_1/Assign"
  input: "^Loss_and_Optimizer/beta1_power/Assign"
  input: "^Loss_and_Optimizer/beta2_power/Assign"
  input: "^Output/Biases/Variable/Assign"
  input: "^Output/Biases/Variable/Optimizer/Assign"
  input: "^Output/Biases/Variable/Optimizer_1/Assign"
  input: "^Output/Weights/Variable/Assign"
  input: "^Output/Weights/Variable/Optimizer/Assign"
  input: "^Output/Weights/Variable/Optimizer_1/Assign"
}
versions {
  producer: 38
}
